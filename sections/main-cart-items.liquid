{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}
{{ 'quantity-popover.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  /* ✅ Base Styling */
  .cart-item {
    display: flex;
    align-items: center;
    padding: 12px;
    border-bottom: 1px solid #e1e1e1;
  }

  .cart-item__media img {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 4px;
  }

  .cart-item__details {
    flex: 2;
    padding-left: 12px;
  }

  .cart-item__quantity {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  /* ✅ Plus and Minus Buttons */
  .cart__quantity-btn {
    background-color: #f5f5f5;
    border: 1px solid #ccc;
    padding: 6px 12px;
    cursor: pointer;
    font-size: 16px;
    border-radius: 4px;
    transition: background-color 0.2s ease;
  }

  .cart__quantity-btn:hover {
    background-color: #e1e1e1;
  }

  .cart__quantity-input {
    width: 40px;
    text-align: center;
    border: 1px solid #ccc;
    padding: 4px;
    border-radius: 4px;
  }

  .cart-item__totals {
    flex: 1;
    text-align: right;
    font-size: 16px;
  }

  .cart-item__actions {
    flex: 0;
    margin-left: 8px;
  }

  /* ✅ Checkout Button Styling */
  .cart__checkout-button {
    background-color: #ff4d4f;
    color: #fff;
    border: none;
    padding: 12px 16px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.2s ease;
    width: auto;
  }

  .cart__checkout-button:hover {
    background-color: #d9363e;
  }

  .cart__checkout-button:disabled {
    background-color: #e1e1e1;
    cursor: not-allowed;
  }

  /* ✅ Flexbox Layout for Checkout */
  .cart__ctas {
    display: flex;
    justify-content: flex-start;
  }

  /* ✅ Fix for Empty Cart Visibility */
  .cart__warnings {
    display: {% if cart == empty %} block {% else %} none {% endif %};
  }

  /* ✅ Responsive Styling */
  @media screen and (max-width: 768px) {
    .cart-item {
      flex-direction: column;
      align-items: flex-start;
      padding: 8px;
    }

    .cart-item__media img {
      width: 60px;
      height: 60px;
    }

    .cart-item__details {
      padding-left: 0;
      padding-top: 8px;
    }

    .cart-item__quantity {
      margin-top: 8px;
    }

    .cart-item__totals {
      text-align: left;
      padding-top: 8px;
    }

    .cart-item__actions {
      margin-left: 0;
      margin-top: 8px;
    }

    .cart__ctas {
      flex-direction: column;
      align-items: flex-start;
    }

    .cart__checkout-button {
      width: 100%; /* Full width on mobile */
    }

    /* ✅ Amazon Button Responsiveness */
    .button--primary {
      width: 100%;
      font-size: 14px;
      padding: 10px;
    }
  }
{%- endstyle -%}

<div class="gradient color-{{ section.settings.color_scheme }} isolate section-{{ section.id }}-padding">
  <div class="page-width">
    <div class="title-wrapper-with-link">
      <h1 class="title title--primary">{{ 'sections.cart.title' | t }}</h1>
      <a href="{{ routes.all_products_collection_url }}" class="underlined-link">
        {{- 'general.continue_shopping' | t -}}
      </a>
    </div>

    <div class="cart__warnings">
      <h1 class="cart__empty-text">{{ 'sections.cart.empty' | t }}</h1>
      <a href="{{ routes.all_products_collection_url }}" class="button">
        {{ 'general.continue_shopping' | t }}
      </a>
    </div>

    <form action="{{ routes.cart_url }}" class="cart__contents critical-hidden" method="post" id="cart">
      <div class="cart__items" id="main-cart-items" data-id="{{ section.id }}">
        <div class="js-contents">
          {%- if cart != empty -%}
            {%- for item in cart.items -%}
              <div class="cart-item">
                <div class="cart-item__media">
                  {% if item.image %}
                    <img src="{{ item.image | image_url: width: 300 }}" alt="{{ item.image.alt | escape }}" />
                  {% endif %}
                </div>
                <div class="cart-item__details">
                  <a href="{{ item.url }}" class="cart-item__name">{{ item.product.title | escape }}</a>
                  <p>{{ item.original_price | money }}</p>
                </div>
                <div class="cart-item__quantity">
                  <button class="cart__quantity-btn cart__quantity-minus" data-line="{{ forloop.index }}">−</button>
                  <input 
                    class="cart__quantity-input"
                    type="number"
                    name="updates[{{ item.id }}]"
                    value="{{ item.quantity }}"
                    data-line="{{ forloop.index }}" />
                  <button class="cart__quantity-btn cart__quantity-plus" data-line="{{ forloop.index }}">+</button>
                </div>
                <div class="cart-item__totals">
                  {{ item.line_price | money }}
                </div>
                <div class="cart-item__actions">
                  <button class="delete-item-btn" data-line="{{ forloop.index }}">✕</button>
                </div>
              </div>
            {%- endfor -%}
          {%- endif -%}
        </div>
      </div>
    </form>
  </div>
</div>

<!--  Quantity Button -->
<script>
document.addEventListener("DOMContentLoaded", function () {
  const updateCart = (line, quantity) => {
    fetch(`${window.Shopify.routes.root}cart/change.js`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ line: line, quantity: quantity })
    }).then(response => {
      if (response.ok) location.reload();
    });
  };

  // Plus and Minus Buttons
  document.querySelectorAll('.cart__quantity-minus').forEach(button => {
    button.addEventListener('click', () => {
      const input = button.nextElementSibling;
      const value = parseInt(input.value) - 1;
      if (value >= 1) updateCart(input.getAttribute('data-line'), value);
    });
  });

  document.querySelectorAll('.cart__quantity-plus').forEach(button => {
    button.addEventListener('click', () => {
      const input = button.previousElementSibling;
      const value = parseInt(input.value) + 1;
      updateCart(input.getAttribute('data-line'), value);
    });
  });

  // Delete Button
  document.querySelectorAll('.delete-item-btn').forEach(button => {
    button.addEventListener('click', (event) => {
      event.preventDefault(); 
      const line = button.getAttribute('data-line');
      fetch(`${window.Shopify.routes.root}cart/change.js`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          line: line,
          quantity: 0
        })
      })
      .then(response => {
        if (response.ok) {
          location.reload(); 
        } else {
          console.error('Failed to remove item from cart');
        }
      })
      .catch(error => console.error('Error:', error));
    });
  });
});

</script>
